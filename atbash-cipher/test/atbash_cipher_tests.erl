%% Based on canonical data version 1.2.0
%% https://github.com/exercism/problem-specifications/raw/master/exercises/atbash-cipher/canonical-data.json
%% This file is automatically generated from the exercises canonical data.

-module(atbash_cipher_tests).

-include_lib("erl_exercism/include/exercism.hrl").
-include_lib("eunit/include/eunit.hrl").




'1_encode_yes_test'() ->
    ?assertEqual("bvh", atbash_cipher:encode("yes")).

'2_encode_no_test'() ->
    ?assertEqual("ml", atbash_cipher:encode("no")).

'3_encode_omg_test'() ->
    ?assertEqual("lnt", atbash_cipher:encode("OMG")).

'4_encode_spaces_test'() ->
    ?assertEqual("lnt", atbash_cipher:encode("O M G")).

'5_encode_mindblowingly_test'() ->
    ?assertEqual("nrmwy oldrm tob",
		 atbash_cipher:encode("mindblowingly")).

'6_encode_numbers_test'() ->
    ?assertEqual("gvhgr mt123 gvhgr mt",
		 atbash_cipher:encode("Testing,1 2 3, testing.")).

'7_encode_deep_thought_test'() ->
    ?assertEqual("gifgs rhurx grlm",
		 atbash_cipher:encode("Truth is fiction.")).

'8_encode_all_the_letters_test'() ->
    ?assertEqual("gsvjf rxpyi ldmul cqfnk hlevi gsvoz "
		 "abwlt",
		 atbash_cipher:encode("The quick brown fox jumps over the lazy "
				      "dog.")).

'9_decode_exercism_test'() ->
    ?assertEqual("exercism",
		 atbash_cipher:decode("vcvix rhn")).

'10_decode_a_sentence_test'() ->
    ?assertEqual("anobstacleisoftenasteppingstone",
		 atbash_cipher:decode("zmlyh gzxov rhlug vmzhg vkkrm thglm v")).

'11_decode_numbers_test'() ->
    ?assertEqual("testing123testing",
		 atbash_cipher:decode("gvhgr mt123 gvhgr mt")).

'12_decode_all_the_letters_test'() ->
    ?assertEqual("thequickbrownfoxjumpsoverthelazydog",
		 atbash_cipher:decode("gsvjf rxpyi ldmul cqfnk hlevi gsvoz "
				      "abwlt")).

'13_decode_with_too_many_spaces_test'() ->
    ?assertEqual("exercism",
		 atbash_cipher:decode("vc vix    r hn")).

'14_decode_with_no_spaces_test'() ->
    ?assertEqual("anobstacleisoftenasteppingstone",
		 atbash_cipher:decode("zmlyhgzxovrhlugvmzhgvkkrmthglmv")).
