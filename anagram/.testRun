===> Verifying dependencies...
===> Linking _build/default/lib/erl_exercism to _build/test/lib/erl_exercism
===> Linking _build/default/lib/parse_trans to _build/test/lib/parse_trans
===> Compiling anagram
===> Performing EUnit tests...
======================== EUnit ========================
file "anagram.app"
  application 'anagram'
    module 'anagram'
      module 'anagram_tests'
        anagram_tests: 1_no_matches_test...ok
        anagram_tests: 2_detects_two_anagrams_test...ok
        anagram_tests: 3_does_not_detect_anagram_subsets_test...ok
        anagram_tests: 4_detects_anagram_test...ok
        anagram_tests: 5_detects_three_anagrams_test...ok
        anagram_tests: 6_does_not_detect_non_anagrams_with_identical_checksum_test...ok
        anagram_tests: 7_detects_anagrams_case_insensitively_test...ok
        anagram_tests: 8_detects_anagrams_using_case_insensitive_subject_test...ok
        anagram_tests: 9_detects_anagrams_using_case_insensitive_possible_matches_test...ok
        anagram_tests: 10_does_not_detect_a_anagram_if_the_original_word_is_repeated_test...ok
        anagram_tests: 11_anagrams_must_use_all_letters_exactly_once_test...ok
        anagram_tests: 12_words_are_not_anagrams_of_themselves_case_insensitive_test...ok
        [done in 0.188 s]
      [done in 0.188 s]
    [done in 0.188 s]
  [done in 0.188 s]
=======================================================
  All 12 tests passed.



>rebar3 eunit

===> Verifying dependencies...
===> Linking _build/default/lib/erl_exercism to _build/test/lib/erl_exercism
===> Linking _build/default/lib/parse_trans to _build/test/lib/parse_trans
===> Compiling anagram
===> Performing EUnit tests...
======================== EUnit ========================
file "anagram.app"
  application 'anagram'
    module 'anagram'
      module 'anagram_tests'
        anagram_tests:16: 1_no_matches_test_ (no matches)...ok
        anagram_tests:23: 2_detects_two_anagrams_test_ (detects two anagrams)...ok
        anagram_tests:30: 3_does_not_detect_anagram_subsets_test_ (does not detect anagram subsets)...ok
        anagram_tests:36: 4_detects_anagram_test_ (detects anagram)...ok
        anagram_tests:43: 5_detects_three_anagrams_test_ (detects three anagrams)...ok
        anagram_tests:52: 6_detects_multiple_anagrams_with_different_case_test_ (detects multiple anagrams with different case)...ok
        anagram_tests:59: 7_does_not_detect_non_anagrams_with_identical_checksum_test_ (does not detect non-anagrams with identical checksum)...ok
        anagram_tests:64: 8_detects_anagrams_case_insensitively_test_ (detects anagrams case-insensitively)...ok
        anagram_tests:73: 9_detects_anagrams_using_case_insensitive_subject_test_ (detects anagrams using case-insensitive subject)...ok
        anagram_tests:82: 10_detects_anagrams_using_case_insensitive_possible_matches_test_ (detects anagrams using case-insensitive possible matches)...ok
        anagram_tests:91: 11_does_not_detect_an_anagram_if_the_original_word_is_repeated_test_ (does not detect an anagram if the original word is repeated)...ok
        anagram_tests:97: 12_anagrams_must_use_all_letters_exactly_once_test_ (anagrams must use all letters exactly once)...ok
        anagram_tests:104: 13_words_are_not_anagrams_of_themselves_case_insensitive_test_ (words are not anagrams of themselves (case-insensitive))...ok
        anagram_tests:111: 14_words_other_than_themselves_can_be_anagrams_test_ (words other than themselves can be anagrams)...ok
        [done in 0.218 s]
      [done in 0.218 s]
    [done in 0.218 s]
  [done in 0.218 s]
=======================================================
  All 14 tests passed.



>rebar3 eunit

===> Verifying dependencies...
===> Linking _build/default/lib/erl_exercism to _build/test/lib/erl_exercism
===> Linking _build/default/lib/parse_trans to _build/test/lib/parse_trans
===> Compiling anagram
===> Performing EUnit tests...
======================== EUnit ========================
file "anagram.app"
  application 'anagram'
    module 'anagram'
      module 'anagram_tests'
        anagram_tests:16: 1_no_matches_test_ (no matches)...ok
        anagram_tests:23: 2_detects_two_anagrams_test_ (detects two anagrams)...ok
        anagram_tests:30: 3_does_not_detect_anagram_subsets_test_ (does not detect anagram subsets)...ok
        anagram_tests:36: 4_detects_anagram_test_ (detects anagram)...ok
        anagram_tests:43: 5_detects_three_anagrams_test_ (detects three anagrams)...ok
        anagram_tests:52: 6_detects_multiple_anagrams_with_different_case_test_ (detects multiple anagrams with different case)...ok
        anagram_tests:59: 7_does_not_detect_non_anagrams_with_identical_checksum_test_ (does not detect non-anagrams with identical checksum)...ok
        anagram_tests:64: 8_detects_anagrams_case_insensitively_test_ (detects anagrams case-insensitively)...ok
        anagram_tests:73: 9_detects_anagrams_using_case_insensitive_subject_test_ (detects anagrams using case-insensitive subject)...ok
        anagram_tests:82: 10_detects_anagrams_using_case_insensitive_possible_matches_test_ (detects anagrams using case-insensitive possible matches)...ok
        anagram_tests:91: 11_does_not_detect_an_anagram_if_the_original_word_is_repeated_test_ (does not detect an anagram if the original word is repeated)...ok
        anagram_tests:97: 12_anagrams_must_use_all_letters_exactly_once_test_ (anagrams must use all letters exactly once)...ok
        anagram_tests:103: 13_words_are_not_anagrams_of_themselves_test_ (words are not anagrams of themselves)...ok
        anagram_tests:110: 14_words_are_not_anagrams_of_themselves_even_if_letter_case_is_partially_different_test_ (words are not anagrams of themselves even if letter case is partially different)...ok
        anagram_tests:117: 15_words_are_not_anagrams_of_themselves_even_if_letter_case_is_completely_different_test_ (words are not anagrams of themselves even if letter case is completely different)...ok
        anagram_tests:123: 16_words_other_than_themselves_can_be_anagrams_test_ (words other than themselves can be anagrams)...ok
        [done in 0.250 s]
      [done in 0.250 s]
    [done in 0.250 s]
  [done in 0.266 s]
=======================================================
  All 16 tests passed.
